// Generated by CoffeeScript 1.9.1
(function() {
  var Callbacks, Emitter;

  jest.dontMock('../emitter.coffee');

  Emitter = require('../emitter.coffee');

  Callbacks = (function() {
    function Callbacks() {
      this.add = jest.genMockFunction();
    }

    return Callbacks;

  })();

  window.$ = {
    Callbacks: Callbacks
  };

  describe('Emitter.constructor', function() {
    return it('constructs with no callbacks', function() {
      var emitter;
      emitter = new Emitter;
      return expect(emitter.cbs).toBeDefined();
    });
  });

  describe('Emitter.on', function() {
    it('stacks callbacks', function() {
      var emitter;
      emitter = new Emitter;
      emitter.on('test1', function() {});
      expect(emitter.cbs['test1']).toBeDefined();
      expect(emitter.cbs['test1'].add.mock.calls.length).toBe(1);
      emitter.on('test1', function() {});
      return expect(emitter.cbs['test1'].add.mock.calls.length).toBe(2);
    });
    return it('add mutiple callbacks with space', function() {
      var emitter;
      emitter = new Emitter;
      emitter.on('test1 test2', function() {});
      expect(emitter.cbs['test1']).toBeDefined();
      expect(emitter.cbs['test2']).toBeDefined();
      expect(emitter.cbs['test1'].add).toBeCalled();
      return expect(emitter.cbs['test2'].add).toBeCalled();
    });
  });

}).call(this);
